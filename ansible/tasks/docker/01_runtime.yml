---
# tasks/docker/01_runtime.yml - CIS Docker 1.1-2.1 Runtime Configuration
- name: "[DOCKER-CIS-1.1] Ensure Docker Engine is properly installed"
  block:
    - name: Verify installed Docker version
      ansible.builtin.command: docker --version
      register: docker_version
      changed_when: false
      tags: docker_install

    - name: Install Docker from edge-community
      ansible.builtin.apk:
        name: docker@edge-community
        state: present
        upgrade: yes
      when: docker_version.stdout is not defined or docker_version.stdout | regex_search('{{ docker_version | default("24.0") }}') is none
      tags: docker_install

    - name: Ensure Docker service is running
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes
      tags: docker_install

  when: docker_required | default(false)

- name: "[DOCKER-CIS-1.2] Configure Docker daemon with security settings"
  block:
    - name: Ensure Docker config directory exists
      ansible.builtin.file:
        path: "/etc/docker"
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Configure daemon.json with security settings
      ansible.builtin.template:
        src: "templates/docker/daemon.json.j2"
        dest: "/etc/docker/daemon.json"
        owner: root
        group: root
        mode: "0644"
      notify: restart docker

    - name: Validate Docker configuration
      ansible.builtin.command: docker info
      register: docker_info
      changed_when: false
      tags: docker_config

  when: docker_required | default(false)
  tags: docker_config

- name: "[DOCKER-CIS-2.1] Ensure Docker socket permissions are restricted"
  ansible.builtin.file:
    path: "/var/run/docker.sock"
    owner: root
    group: docker
    mode: "0660"
  when: docker_required | default(false)
  tags: docker_security

- name: "[DOCKER-CIS-1.3] Ensure Docker daemon log level is set appropriately"
  ansible.builtin.lineinfile:
    path: "/etc/docker/daemon.json"
    regexp: '"log-level":'
    line: '  "log-level": "{{ docker_log_level | default("info") }}",'
    insertafter: "{"
  notify: restart docker
  when: docker_required | default(false)
  tags: docker_config
