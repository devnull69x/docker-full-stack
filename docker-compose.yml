version: '3.9'

services:

  redis-master:
    image: docker.io/bitnami/redis-cluster:6.2-debian-10
    container_name: redis-master
    depends_on:
      - redis-node-0
    deploy:
      replicas: 1
      mode: global
      placement:
        constraints:
          - node.role == manager
    restart: always
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_CLUSTER_REPLICAS=1'
      - 'REDISCLI_AUTH=bitnami'
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-master'
      - 'REDIS_CLUSTER_CREATOR=yes'
      - 'REDIS_DSIABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG'
    networks:
      - app-tier
    volumes:
      - 'redis_master_data:/bitnami/redis/data/'

  redis-node-0:
    image: docker.io/bitnami/redis-cluster:6.2-debian-10
    container_name: redis-node-0
    deploy:
      replicas: 1
      mode: global
      placement:
        constraints:
          - node.role == worker
    restart: always
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis_master'
    networks:
      - app-tier
    volumes:
      - 'redis_node0_data:/bitnami/redis/data'

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:6.2-debian-10
    container_name: redis-node-1
    deploy:
      replicas: 1
      mode: global
      placement:
        constraints:
          - node.role == worker
    restart: always
    environment:
      - 'ALLOW_EMPTY_PASSWORD=no'
      - 'REDIS_PASSWORD=bitnami'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-master'
    networks:
      - app-tier
    volumes:
      - 'redis_node1_data:/bitnami/redis/data'

  balancer:
    image: docker.io/bitnami/haproxy:2-debian-10
    container_name: balancer
    deploy:
      replicas: 1
      mode: global
      placement:
        constraints:
          - node.role == manager
    restart: always
    ports:
      - '80:80'
      - '443:443'
    networks:
      - pres-tier
    volumes:
      - './configs/haproxy.cfg:/bitnami/haproxy/conf/haproxy.cfg'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './errors/400.http:/etc/haproxy/errors/400.http'
      - './errors/403.http:/etc/haproxy/errors/403.http'
      - './errors/408.http:/etc/haproxy/errors/408.http'
      - './errors/500.http:/etc/haproxy/errors/500.http'
      - './errors/502.http:/etc/haproxy/errors/502.http'
      - './errors/503.http:/etc/haproxy/errors/503.http'
      - './errors/504.http:/etc/haproxy/errors/504.http'

  prometheus:
    image: docker.io/bitnami/prometheus:2-debian-10
    container_name: prometheus
    deploy:
      replicas: 1
      mode: global
      placement:
        constraints:
          - node.role == manager
    restart: always
    ports:
      - '10052:10052'
    networks:
      - pres-tier
    volumes:
      - ./configs/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml

volumes:
  redis_master_data:
    driver: local
  redis_node0_data:
    driver: local
  redis_node1_data:
    driver: local

networks:
  pres-tier:
    driver: bridge
  app-tier:
    driver: bridge
  data-tier:
    driver: bridge

secrets:
  redis_auth_password: # echo "mysupersecretpassword" | docker secret create redis_auth_password -
    file: ./secret/auth_password.txt
  redis_master_password: # echo "mysupersecretpassword" | docker secret create redis_master_password -
    file: ./secret/master_password.txt
  redis_password: # echo "mysupersecretpassword" | docker secret create redis_password -
    file: ./secret/redis_password.txt
