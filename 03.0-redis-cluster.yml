version: '3.8'

x-environment-slave: &common-keys-slave
   environment:
     REDIS_PASSWORD: ${REDIS_PASSWORD}
     REDIS_APPLICATION_MODE: "slave"
     REDIS_MASTER_HOST: "redis_redis-master"
     REDIS_MASTER_PORT: 6379
     REDIS_MASTER_PASSWORD: ${REDIS_PASSWORD}
     REDIS_SLAVE_ON: "yes"
     REDIS_SLAVE_PARALLEL_SYNCS: "yes"
     REDIS_SLAVE_PARALLEL_SYNCS_PER_SLAVE: "yes"
     <<: *common-keys-environment-nodes

services:
  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-node-0 ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [ node.labels.name == unison-node-1 ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-master:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [ node.labels.name == unison-master ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis_cluster_data_master:/bitnami/redis/data:rw
    depends_on:
      - redis-node-0
      - redis-node-1
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDISCLI_AUTH: ${REDISCLI_AUTH}
      REDIS_CLUSTER_REPLICAS: "1"
      REDIS_REPLICATION_MODE: "redis-master"
      REDIS_CLUSTER_CREATOR: "yes"
      REDIS_NODES: "redis-node-0 redis-node-1 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

volumes:
  redis_cluster_data_master:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis_cluster_data_master
  redis-cluster_data-0:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-0
  redis-cluster_data-1:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-1

networks:
  rd:
    driver: overlay
    attachable: true
  internet:
    external: true
    attachable: true