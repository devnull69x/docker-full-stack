version: '3.8'

services:
  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-node-0 ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-0:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints: [ node.labels.name == unison-node-1 ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-1:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-master ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-2:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-node-0 ]
        max_replicas_per_node: 2
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-3:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-node-1 ]
        max_replicas_per_node: 2
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis-cluster_data-4:/bitnami/redis/data:rw
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: "redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-master:
    image: docker.io/bitnami/redis-cluster:7.2
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-master ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.tcp.routers.redis.entrypoints: "redis"
        traefik.tcp.routers.redis.rule: "HostSNI(`*`)"
        traefik.tcp.services.redis.loadbalancer.server.port: "6379"
    networks:
      - internet
      - rd
    volumes:
      - redis_cluster_data_master:/bitnami/redis/data:rw
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDISCLI_AUTH: ${REDISCLI_AUTH}
      REDIS_CLUSTER_REPLICAS: "1"
      REDIS_REPLICATION_MODE: "redis-master"
      REDIS_CLUSTER_CREATOR: "yes"
      REDIS_NODES: "redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-master"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

  redis-commander:
    image: rediscommander/redis-commander:latest
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-master ]
        max_replicas_per_node: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: "internet"
        traefik.http.routers.redis-commander.entrypoints: "https"
        traefik.http.routers.redis-commander.middlewares: "default@file"
        traefik.http.routers.redis-commander.rule: "Host(`redisc.ganjaking.cloud`)"
        traefik.http.routers.redis-commander.tls.options: "modern@file"
        traefik.http.routers.redis-commander.tls: "true"
        traefik.http.services.redis-commander.loadbalancer.server.port: 8081
        traefik.http.services.redis-commander.loadbalancer.sticky.cookie.httpOnly: "true"
        traefik.http.services.redis-commander.loadbalancer.sticky.cookie.secure: "true"
    networks:
      - internet
      - rd
    depends_on:
      - redis-master
    environment:
      - REDIS_HOSTS=redis-master:6379
      - HTTP_USER=${HTTP_USER}
      - HTTP_PASSWORD=${HTTP_PASSWORD}
    labels:
      - "deunhealth.restart.on.unhealthy=true"


volumes:
  redis_cluster_data_master:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis_cluster_data_master
  redis-cluster_data-0:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-0
  redis-cluster_data-1:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-1
  redis-cluster_data-2:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-2
  redis-cluster_data-3:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-3
  redis-cluster_data-4:
    driver: local-persist
    driver_opts:
      mountpoint: /opt/sync/db/redis-cluster_data-4

networks:
  rd:
    driver: overlay
    attachable: true
  internet:
    external: true
    attachable: true