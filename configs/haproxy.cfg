global
log 127.0.0.1 local2
maxconn 4096

ddefaults
mode http
log global
option httplog
option dontlognull
option http-server-close
option forwardfor except 127.0.0.0/8
option redispatch
retries 3
timeout http-request 20s
timeout queue 1m
timeout connect 10s
timeout client 1m
timeout server 1m
timeout http-keep-alive 30s
timeout check 10s
maxconn 3000
errorfile 400 /etc/haproxy/errors/400.http
errorfile 403 /etc/haproxy/errors/403.http
errorfile 408 /etc/haproxy/errors/408.http
errorfile 500 /etc/haproxy/errors/500.http
errorfile 502 /etc/haproxy/errors/502.http
errorfile 503 /etc/haproxy/errors/503.http
errorfile 504 /etc/haproxy/errors/504.http

frontend fe_http
option forwardfor except 127.0.0.1
option httpclose
bind *:8080
default_backend be_http

backend be_http
balance roundrobin
server nginx service:8080 check port 8080

# Define your hostnames
#acl wordpress_domain_1 hdr(host) -i wp1-docker.ddns.net
#acl wordpress_domain_2 hdr(host) -i wp2-docker.ddns.net
#acl wordpress_domain_3 hdr(host) -i wp3-docker.ddns.net

## figure out backend to use based on domainname
#use_backend wordpress1 if wordpress_domain_1 # your first registered hostname
#use_backend wordpress2 if wordpress_domain_2 # your second registered hostname
#use_backend wordpress3 if wordpress_domain_3 # your third registered hostname

#backend wordpress1 # wp1-docker.ddns.net container
#balance roundrobin
#option httpclose
#option forwardfor
#server s1 172.17.0.6:80 # This ip should be the ip of the wordpress container 1

#backend wordpress2 # wp2-docker.ddns.net container
#balance roundrobin
#option httpclose
#option forwardfor
#server s2 172.17.0.7:80 # This ip should be the ip of the wordpress container 2
