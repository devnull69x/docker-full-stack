version: '3.9'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  internet:
    external: true
    attachable: true

services:
  traefik:
    <<: *default-opts
    image: traefik:latest
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--api.debug=true"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.https.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.swarmModeRefreshSeconds=30s"
      - "--providers.docker.network=internet"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.filename=/etc/traefik/configs/traefik-dynamic-configuration.yml"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    networks:
      - internet
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/sync/db/traefik_data/traefik-dynamic-configuration.yml:/etc/traefik/configs/traefik-dynamic-configuration.yml:rw
      - /opt/sync/db/traefik_data/certs:/certificates:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-master ]
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=internet"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.ganjaking.cloud`)"
        - "traefik.http.routers.dashboard.entrypoints=http"
        - "traefik.http.routers.dashboard.middlewares=https-redirect"
        - "traefik.http.routers.dashboard.entrypoints=https"
        - "traefik.http.routers.dashboard.tls=true"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
        - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
        - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
        - "traefik.http.routers.dashboard.middlewares=admin-auth"
        - "traefik.http.middlewares.admin-auth.basicauth.users=admin:$$2y$$05$$L5WC/q6NDCPkZ8XOKPEl.uybq2IgimcTQ1Oy3EIBHYYJ6S.zKmSmi"
        - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=http"
        - "traefik.http.routers.http-catchall.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"

  whoami:
    image: "traefik/whoami"
    networks:
      - internet
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.labels.name == unison-master ]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.entrypoints=https"
        - "traefik.http.routers.whoami.rule=Host(`whoami.ganjaking.cloud`)"
        - "traefik.http.routers.whoami.service=whoami"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
